import { SecureUserStorage } from '../utils/secure-user-storage.js';
import { Logger } from '../utils/logger.js';
import { Commands } from './commands.js';

export async function listUsers(): Promise<void> {
  const storage = new SecureUserStorage();

  try {
    Logger.info('üìã Listando usu√°rios cadastrados...');

    const users = await storage.listUsers();

    if (users.length === 0) {
      Logger.warning('üì≠  Nenhum usu√°rio cadastrado.');
      Logger.info(
        `üí° Para adicionar um usu√°rio, use: gitusr ${Commands.addUser.name}`
      );
      return;
    }

    Logger.success(`‚úÖ ${users.length} usu√°rio(s) encontrado(s):\n`);

    users.forEach((user, index) => {
      const activeIndicator = Logger.activeStatus(user.isActive);
      const userIndex = Logger.indexNumber(index + 1);

      Logger.default(`${userIndex} ${activeIndicator}`);
      Logger.default(`\tApelido: ${user.nickname || 'N/A'}`);
      Logger.default(`\tNome: ${user.name}`);
      Logger.debug(`\tEmail: ${user.email}`);
      Logger.debug(`\tID: ${user.id}`);

      if (user.description) {
        Logger.debug(`\tDescri√ß√£o: ${user.description}`);
      }

      Logger.log('');
    });
  } catch (error) {
    if (error instanceof Error) {
      Logger.error(`‚ùå Erro ao listar usu√°rios: ${error.message}`);
    } else {
      Logger.error('‚ùå Erro desconhecido ao listar usu√°rios');
    }
  }
}
